!function(a){"function"==typeof define&&define.amd?define([],a):"object"==typeof exports?module.exports=a():window.aidi=a()}(function(){"use strict";var a=function(){var a={},b={},c=/^[^\(]+\(([^\)]*)\)\s+{/,d=function(a,b){return(a||[]).map(function(a){var c=h(a);if(!c)throw new Error("Cannot resolve dependency: "+a+(b?", for component: "+b:""));return c})},e=function(a,b,d){var e=b?b:a.__inject__;if("function"==typeof a&&!e){var f=a.toString().match(c);if(!f||2!==f.length)throw new Error("Error when identifying dependencies. Parsing function's parameters list failed."+(d?" component: "+d:""));e=f[1].split(",").map(function(a){return a.trim()}).filter(function(a){return""!==a})}return e||[]},f=function(b,c,d){var f=e(c,d,b);if(void 0!==a[b])throw new Error("Provider "+b+" is already registered");c.__name__=b,c.__inject__=f||[],a[b]=c},g=function(b){var c=a[b];if(c){var e=d(c.__inject__,b);return c.apply(void 0,e)}throw new Error("Provider "+b+" not found")},h=function(a){return void 0===b[a]&&(b[a]=g(a)),b[a]},i=function(a,b,c){return"function"==typeof a?a.apply(void 0,c):(c.forEach(function(c,d){a[b[d]]=c}),a)};return this.providers=a,this.components=b,this.component=function(a,b,c){return 1===arguments.length?h(a):(f(a,b,c),this)},this.service=function(){return this.component.apply(this,arguments)},this.inject=function(a,b){var c=e(a,b),f=d(c);return i(a,c,f)},this};return new a});
//# sourceMappingURL=aidi.min.js.map